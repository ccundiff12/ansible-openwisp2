- name: Update APT package cache
  apt: update_cache=yes
  changed_when: false

- name: Install system packages
  apt: name={{ item }} state=latest
  notify: reload systemd
  with_items:
    - sudo
    - software-properties-common
    - build-essential
    - supervisor
    - nginx
    - openssl
    - libssl-dev
    - libffi-dev
    - python-dev
    - redis-server

- name: Install spatialite
  when: openwisp2_database.engine == "django.contrib.gis.db.backends.spatialite"
  apt: name={{ item }} state=latest
  notify: reload systemd
  with_items:
    - sqlite3
    - gdal-bin
    - libproj-dev
    - libgeos-dev
    - libspatialite-dev

# fixes issue described in https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
- name: Install acl if acting as non-root user
  apt: name=acl state=latest
  when: ansible_user is not defined or ansible_user != 'root'

- name: ensure supervisor is started
  service: name=supervisor state=started

- name: Install python2 packages
  when: openwisp2_python in ["python2.7", "python2"]
  apt: name={{ item }} state=latest
  with_items:
    - python-pip
    - python-dev
    - python-virtualenv

- name: Install python3 packages
  when: openwisp2_python == "python3"
  apt: name={{ item }} state=latest
  with_items:
    - python3
    - python3-pip
    - python3-dev
    - python-virtualenv

- name: Install python3-pyparsing
  when: ansible_distribution == "Debian" and ansible_distribution_version == "9.0"
  apt: name={{ item }} state=latest
  with_items:
    - python3-pyparsing

- name: Install python wheel (optional, allowed to fail)
  ignore_errors: yes
  apt: name={{ item }} state=latest
  with_items:
    - python-wheel
    - python3-wheel

- name: Install python3-virtualenv
  ignore_errors: yes
  when: ansible_distribution != 'Ubuntu'
  apt: name={{ item }} state=latest
  with_items:
    - python3-virtualenv

- name: Install ntp
  when: openwisp2_install_ntp
  apt:
    name: ntp
    state: latest
